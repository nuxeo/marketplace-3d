<project name="3d-assembly" default="build" xmlns:nx="urn:nuxeo-build" xmlns:artifact="urn:nuxeo-artifact">
    <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
    <taskdef resource="org/nuxeo/build/artifact/antlib.xml" uri="urn:nuxeo-artifact" />
    <taskdef resource="net/sf/antcontrib/antlib.xml" />

    <target name="build" description="Build Platform 3D Marketplace package">
        <property name="outdir" value="${maven.project.build.directory}" />
        <artifact:nuxeo-expand includeTestScope="true" groupPrefixes="org.nuxeo" />
        <artifact:print output="${outdir}/artifacts-3d.properties" mode="sdk" />
        <artifact:print output="${outdir}/test-artifacts-3d.properties" mode="sdk" scopes="test" />
        <artifact:print output="${outdir}/dependency-tree.log" />
        <tstamp />

        <delete failonerror="false" dir="${outdir}/nxr" />
        <mkdir dir="${outdir}/nxr" />
        <delete failonerror="false" dir="${outdir}/marketplace" />
        <mkdir dir="${outdir}/marketplace" />
        <copy todir="${outdir}/marketplace">
            <fileset dir="src/main/resources" />
            <filterset>
                <filter token="VERSION" value="${maven.project.version}" />
                <filter token="DISTRIB_VERSION" value="${nuxeo.distribution.version}" />
            </filterset>
        </copy>
        <copy file="${outdir}/artifacts-3d.properties" todir="${outdir}/marketplace/install" />
        <copy file="${outdir}/test-artifacts-3d.properties" todir="${outdir}/marketplace/install" />

        <!-- Base distribution NXR -->
        <copy todir="${outdir}">
            <artifact:file key="org.nuxeo.ecm.distribution:nuxeo-distribution-cap::zip" />
        </copy>

        <!-- Nuxeo bundles -->
        <copy todir="${outdir}/nxr/bundles" overwrite="true">
            <artifact:set>
                <includes>
                    <artifact groupId="org.nuxeo*" />
                </includes>
                <excludes>
                    <artifact groupId="org.nuxeo.lib*" />
                    <artifact scope="test" />
                    <artifact scope="provided" />
                    <artifact type="pom" />
                </excludes>
            </artifact:set>
        </copy>
        <!-- Third-party libraries -->
        <copy todir="${outdir}/nxr/lib" overwrite="true">
            <artifact:set>
                <includes>
                    <artifact groupId="!org.nuxeo*" scope="!test" />
                    <artifact groupId="org.nuxeo.lib*" scope="!test" />
                </includes>
            </artifact:set>
        </copy>
        <nx:rmdups dir="${outdir}/nxr/lib" />
        <zip destfile="${outdir}/nxr-${maven.project.version}.zip" basedir="${outdir}/nxr" />
        <nx:zipdiff file1="${outdir}/nxr-${maven.project.version}.zip"
                    file2="${outdir}/nuxeo-distribution-cap-${nuxeo.distribution.version}.zip"
                    includesfile="${outdir}/includes"
                    excludesfile="${outdir}/excludesfile"
                    patternsetid="threed.versus.cap"
                    ignoreContent="false"
                    ignoreContentPattern=".*\.jar$">
        </nx:zipdiff>
        <unzip src="${outdir}/nxr-${maven.project.version}.zip" dest="${outdir}/marketplace/install">
            <patternset refid="threed.versus.cap" />
        </unzip>


        <!-- Separate UI packages -->
        <mkdir dir="${outdir}/marketplace/install/bundles-jsf-ui" />
        <move todir="${outdir}/marketplace/install/bundles-jsf-ui">
            <fileset dir="${outdir}/marketplace/install/bundles">
                <include name="nuxeo-platform-3d-jsf-*.jar" />
            </fileset>
        </move>
        <mkdir dir="${outdir}/marketplace/install/bundles-web-ui" />
        <move todir="${outdir}/marketplace/install/bundles-web-ui">
            <fileset dir="${outdir}/marketplace/install/bundles">
                <include name="nuxeo-platform-3d-web-ui-*.jar" />
            </fileset>
        </move>

        <!-- Generate install.xml content -->
        <var name="install.bundles" value="" />
        <var name="install.bundles"
             value="${line.separator}
  &lt;update file=&quot;${package.root}/install/bundles&quot; todir=&quot;${env.bundles}&quot; /&gt;" />
        <var name="install.bundles"
             value="${install.bundles}${line.separator}
  &lt;update file=&quot;${package.root}/install/bundles-jsf-ui&quot; todir=&quot;${env.bundles}&quot; if=&quot;Packages.contains('nuxeo-jsf-ui')&quot; /&gt;" />
        <var name="install.bundles"
             value="${install.bundles}${line.separator}
  &lt;update file=&quot;${package.root}/install/bundles-web-ui&quot; todir=&quot;${env.bundles}&quot; if=&quot;Packages.contains('nuxeo-web-ui')&quot; /&gt;" />

        <var name="install.libs" value="" />
        <if>
            <available file="${outdir}/marketplace/install/lib" />
            <then>

                <var name="install.libs"
                     value="${line.separator}
  &lt;update file=&quot;${package.root}/install/lib&quot; todir=&quot;${env.lib}&quot; /&gt;" />
            </then>
        </if>

        <var name="install.properties"
             value="${line.separator}
  &lt;copy file=&quot;${package.root}/install/artifacts-3d.properties&quot;${line.separator}
    todir=&quot;${env.server.home}/sdk&quot; overwrite=&quot;true&quot; /&gt;${line.separator}
  &lt;copy file=&quot;${package.root}/install/test-artifacts-3d.properties&quot;${line.separator}
    todir=&quot;${env.server.home}/sdk&quot; overwrite=&quot;true&quot; /&gt;" />

        <var name="install.templates" value="" />
        <if>
            <available file="${outdir}/marketplace/install/templates" />
            <then>
                <var name="install.templates"
                     value="${line.separator}
  &lt;copy dir=&quot;${package.root}/install/templates&quot; todir=&quot;${env.templates}&quot; overwrite=&quot;true&quot; /&gt;${line.separator}
  &lt;config addtemplate=&quot;3d&quot; /&gt;${line.separator}" />
            </then>
        </if>

        <copy file="src/main/resources/install.xml" todir="${outdir}/marketplace" overwrite="true">
            <filterset>
                <filter token="BUNDLES" value="${install.bundles}" />
                <filter token="LIBS" value="${install.libs}" />
                <filter token="PROPERTIES" value="${install.properties}" />
                <filter token="TEMPLATES" value="${install.templates}" />
            </filterset>
        </copy>

        <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
             basedir="${outdir}/marketplace" />
        <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip" type="zip" />
    </target>

</project>